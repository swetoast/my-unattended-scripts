#!/usr/bin/env bash

# Revision 9

# A Fan Controling script for my nvidia Card in a server
# Store this file at /usr/bin/fancontrol and then use the service to run it with systemd
# Dependacies: 
# gpustat https://github.com/wookayin/gpustat
# nvidia-settings, this must be installed in headless mode (see readme.md for more info)

# Configuration
CONFIG=/opt/etc/unattended_update.conf
if [ ! -f "$CONFIG" ]; then
    echo "No configuration file present at $CONFIG"
    exit 0
fi
source "$CONFIG"

# Enable or disable debug mode
[ "${set_debug:-disabled}" = "enabled" ] && set -x || set +x

# Functions
notify_critical() {
    local stats=$(/usr/bin/nvidia-smi --query-gpu=temperature.gpu,utilization.gpu,utilization.memory,power.draw,pstate --format=csv,noheader | awk -F', ' '{print $1,$2,$3,$4,$5}')
    read -r temp gpu_usage mem_usage power_usage pstate_num <<< "$stats"
    local fan_speed=$1

    local pstate_descriptions=("Maximum Performance" "Near Maximum Performance" "High Performance" "Above Average Performance" "Average Performance" "Below Average Performance" "Low Performance" "Lower Performance" "Near Minimum Performance" "Minimum Performance" "Lowest Performance" "Unknown Performance State")
    local pstate=${pstate_descriptions[$pstate_num]}

    local title="Critical GPU Status Alert"
    local body="The GPU temperature has reached a critical level of $temp°C. The current fan speed is set to $fan_speed%. The GPU usage is at $gpu_usage% and memory usage is at $mem_usage%. The power usage is $power_usage watts. The performance state is $pstate. Immediate attention is required."

    curl -u "$pushbullet_token": https://api.pushbullet.com/v2/pushes -d type=note -d title="$title" -d body="$body"
}

set_fan_speed() {
    local temp=$1
    local fan_speed=22
    case $temp in
        [30-39]) fan_speed=25 ;;
        [40-49]) fan_speed=30 ;;
        [50-59]) fan_speed=50 ;;
        [60-69]) fan_speed=60 ;;
        [70-79]) fan_speed=80 ;;
        [80-89]) fan_speed=100; notify_critical $fan_speed ;;
    esac
    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 /usr/bin/nvidia-settings -a "[fan:0]/GPUTargetFanSpeed=$fan_speed"
}

get_temp() {
    if command -v gpustat &> /dev/null
    then
        gpustat | grep -oE '[0-9]{2}.C' | grep -oE '[0-9]{2}'
    else
        nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader | grep -oE '[0-9]{2}'
    fi
}

initialize() {
    nvidia-xconfig --allow-empty-initial-configuration --enable-all-gpus --cool-bits=4 --separate-x-screens
    /usr/bin/nvidia-smi -pm ENABLED
    /usr/bin/nvidia-smi -pl 110
    X :0 &
    sleep 5
    export DISPLAY=:0
    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 /usr/bin/nvidia-settings -a "[gpu:0]/GPUFanControlState=1" -a "[gpu:0]/GpuPowerMizerMode=0"
}

control_fan_speed() {
    while true; do
        temp_array=()
        for i in {1..60}; do
            temp_array+=("$(get_temp)")
            sleep 1
        done
        avg_temp=$(printf "%s\\n" "${temp_array[@]}" | awk '{s+=$1} END {print int(s/NR)}')
        set_fan_speed $avg_temp
        echo "Fan speed changed to $fan_speed %, average temperature over last 60 seconds: $avg_temp °C"
    done
}

# Main
case "${1}" in
    -init) initialize ;;
    *) control_fan_speed ;;
esac
